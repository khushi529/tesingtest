import 'package:flutter/material.dart';
import 'screens/splash_screen.dart';

void main() {
  runApp(const ElectronicsShopApp());
}

class ElectronicsShopApp extends StatelessWidget {
  const ElectronicsShopApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Anchor by Panasonic',
      theme: ThemeData(
        primaryColor: const Color(0xFF004e92),
        fontFamily: 'Roboto',
        textTheme: const TextTheme(
          bodyLarge: TextStyle(fontSize: 16, color: Colors.black87),
          headlineSmall: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
        ),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: const Color(0xFF004e92),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(12),
            ),
            padding: const EdgeInsets.symmetric(vertical: 14),
            elevation: 6,
          ),
        ),
      ),
      home: const SplashScreen(),
    );
  }
}

//splash

import 'dart:async';
import 'package:flutter/material.dart';
import 'phone_screen.dart';

class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  _SplashScreenState createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> with SingleTickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _fadeAnimation;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 2),
    );
    _fadeAnimation = CurvedAnimation(
      parent: _controller,
      curve: Curves.easeInOut,
    );
    _controller.forward();
    Future.delayed(const Duration(seconds: 3), () {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const PhoneScreen()),
      );
    });
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF004e92), Color(0xFF000428)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: Center(
          child: FadeTransition(
            opacity: _fadeAnimation,
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Image.asset(
                  'assets/images/icon.jpeg',
                  height: 100,
                  width: 100,
                ),
                const SizedBox(height: 20),
                Text(
                  "ANCHOR BY PANASONIC",
                  style: Theme.of(context).textTheme.headlineSmall?.copyWith(
                    color: Colors.white,
                    letterSpacing: 1.2,
                  ),
                ),
                const SizedBox(height: 10),
                Text(
                  "Powered by KUSHAL ENTERPRISE",
                  style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                    color: Colors.white70,
                    fontStyle: FontStyle.italic,
                  ),
                ),
                const SizedBox(height: 40),
                CircularProgressIndicator(
                  color: Colors.white,
                  strokeWidth: 3,
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
//phone 
import 'package:flutter/material.dart';
import 'otp_screen.dart';
import 'package:intl_phone_field/intl_phone_field.dart';

class PhoneScreen extends StatefulWidget {
  const PhoneScreen({super.key});

  @override
  _PhoneScreenState createState() => _PhoneScreenState();
}

class _PhoneScreenState extends State<PhoneScreen> {
  String phone = '';
  final _phoneController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "Phone Verification",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
        backgroundColor: Colors.transparent,
        elevation: 0,
      ),
      extendBodyBehindAppBar: true,
      body: Container(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF004e92), Color(0xFF000428)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            const Icon(
              Icons.phone_android,
              size: 80,
              color: Colors.white,
            ),
            const SizedBox(height: 20),
            const Text(
              "Enter Your Phone Number",
              style: TextStyle(
                color: Colors.white,
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            const Text(
              "We will send you a one-time password (OTP) to verify your phone number.",
              style: TextStyle(
                color: Colors.white70,
                fontSize: 16,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 30),
            IntlPhoneField(
              controller: _phoneController,
              style: const TextStyle(color: Colors.white),
              dropdownTextStyle: const TextStyle(color: Colors.white),
              decoration: InputDecoration(
                prefixIcon: const Icon(Icons.phone, color: Colors.white),
                labelText: 'Phone Number',
                labelStyle: const TextStyle(color: Colors.white70),
                hintText: 'Enter your phone number',
                hintStyle: const TextStyle(color: Colors.white38),
                filled: true,
                fillColor: Colors.white.withOpacity(0.1),
                counterStyle: const TextStyle(color: Colors.white70),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(15),
                  borderSide: const BorderSide(color: Colors.white),
                ),
              ),
              initialCountryCode: 'IN',
              onChanged: (value) {
                setState(() {
                  phone = value.completeNumber;
                });
              },
            ),
            const SizedBox(height: 30),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: const Color(0xFF004e92),
                padding: const EdgeInsets.symmetric(vertical: 15),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
                elevation: 5,
              ),
              onPressed: () {
                if (phone.isNotEmpty) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const OtpScreen()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text("Please enter a valid phone number"),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              },
              child: const Text(
                "Get OTP",
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 16,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
//otp
import 'package:flutter/material.dart';
import 'home_screen.dart';

class OtpScreen extends StatelessWidget {
  const OtpScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final TextEditingController otpController = TextEditingController();

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "OTP Verification",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
        backgroundColor: Colors.transparent,
        elevation: 0,
      ),
      extendBodyBehindAppBar: true,
      body: Container(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF004e92), Color(0xFF000428)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(
              "Enter OTP",
              style: const TextStyle(
                color: Colors.white,
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            Text(
              "We have sent a 6-digit OTP to your registered phone number.",
              style: const TextStyle(
                color: Colors.white,
                fontSize: 16,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 30),
            TextField(
              controller: otpController,
              keyboardType: TextInputType.number,
              maxLength: 6,
              style: const TextStyle(color: Colors.white),
              decoration: InputDecoration(
                prefixIcon: const Icon(Icons.lock, color: Colors.white),
                labelText: "OTP",
                labelStyle: const TextStyle(color: Colors.white),
                hintText: "Enter 6-digit OTP",
                hintStyle: const TextStyle(color: Colors.white38),
                counterStyle: const TextStyle(color: Colors.white),
                enabledBorder: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(15),
                  borderSide: const BorderSide(color: Colors.white70),
                ),
                focusedBorder: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(15),
                  borderSide: const BorderSide(color: Colors.white),
                ),
              ),
            ),
            const SizedBox(height: 30),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: const Color(0xFF004e92),
                padding: const EdgeInsets.symmetric(vertical: 15),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
                elevation: 5,
              ),
              onPressed: () {
                if (otpController.text.length == 6) {
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (context) => HomeScreen()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text("Please enter a valid 6-digit OTP"),
                    ),
                  );
                }
              },
              child: const Text(
                "Verify OTP",
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 16,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
//home_screen
import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'categories_screen.dart';

class HomeScreen extends StatelessWidget {
  HomeScreen({super.key});

  final List<Map<String, String>> companies = [
    {'name': 'Pipe', 'logo': 'assets/images/pipe.jpeg'},
    {'name': 'Switch', 'logo': 'assets/images/switch.jpeg'},
    {'name': 'Switchgear', 'logo': 'assets/images/switchgear.jpeg'},
    {'name': 'LED', 'logo': 'assets/images/led.jpeg'},
    {'name': 'Cable', 'logo': 'assets/images/cable.jpeg'},
    {'name': 'Fan', 'logo': 'assets/images/fan.jpeg'},
    {'name': 'Boxes', 'logo': 'assets/images/boxes.jpeg'},
    {'name': 'Bulb', 'logo': 'assets/images/bulb.jpeg'},
  ];

  final List<String> advertisements = [
    'assets/images/anchor.jpeg',
    'assets/images/anchor.jpeg',
    'assets/images/anchor.jpeg',
  ];

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "Select Type Of Product",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
        iconTheme: const IconThemeData(color: Colors.white),
        flexibleSpace: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFF004e92), Color(0xFF000428)],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF004e92), Color(0xFF000428)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: Column(
          children: [
            const SizedBox(height: 10),
            CarouselSlider(
              options: CarouselOptions(
                height: size.height * 0.3,
                autoPlay: true,
                enlargeCenterPage: true,
                viewportFraction: 0.9,
                aspectRatio: 16 / 9,
                initialPage: 0,
                enlargeStrategy: CenterPageEnlargeStrategy.scale,
              ),
              items: advertisements.map((ad) {
                return ClipRRect(
                  borderRadius: BorderRadius.circular(15),
                  child: Image.asset(
                    ad,
                    fit: BoxFit.cover,
                    width: double.infinity,
                    errorBuilder: (context, error, stackTrace) {
                      return const Icon(
                        Icons.error,
                        color: Colors.red,
                        size: 40,
                      );
                    },
                  ),
                );
              }).toList(),
            ),
            const SizedBox(height: 20),
            Expanded(
              child: GridView.builder(
                padding: const EdgeInsets.all(16),
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  crossAxisSpacing: 20,
                  mainAxisSpacing: 20,
                  childAspectRatio: 1,
                ),
                itemCount: companies.length,
                itemBuilder: (context, index) {
                  final company = companies[index];
                  return GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => CategoriesScreen(companyName: company['name']!),
                        ),
                      );
                    },
                    child: Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(20),
                        color: Colors.white,
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.15),
                            blurRadius: 12,
                            offset: const Offset(0, 6),
                          ),
                        ],
                      ),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          ClipRRect(
                            borderRadius: BorderRadius.circular(12),
                            child: Image.asset(
                              company['logo']!,
                              height: size.height * 0.12,
                              width: size.height * 0.12,
                              fit: BoxFit.cover,
                              errorBuilder: (context, error, stackTrace) {
                                return const Icon(
                                  Icons.error,
                                  color: Colors.red,
                                  size: 40,
                                );
                              },
                            ),
                          ),
                          const SizedBox(height: 12),
                          Text(
                            company['name']!,
                            style: const TextStyle(
                              fontSize: 18,
                              fontWeight: FontWeight.bold,
                              color: Colors.black,
                            ),
                            textAlign: TextAlign.center,
                          ),
                        ],
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
//categories screeen
import 'package:flutter/material.dart';
import 'category_detail_screen.dart';

class CategoriesScreen extends StatelessWidget {
  final String companyName;

  CategoriesScreen({Key? key, required this.companyName}) : super(key: key);

  final Map<String, List<Map<String, String>>> categories = {
    'Pipe': [
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      }, // Add more items
    ],
    'Switch': [
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'Switchgear':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'LED':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'Cable':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'Fan':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'Boxes':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    'Bulb':[
      {
        'name': 'Anchor',
        'image': 'assets/images/anchor.jpeg',
        'pdf': 'assets/pdfs/R1.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'RR',
        'image': 'assets/images/rr.jpeg',
        'pdf': 'assets/pdfs/R2.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Havells',
        'image': 'assets/images/havells.jpeg',
        'pdf': 'assets/pdfs/R3.pdf',
        'video': 'assets/videos/song.mp4',
      },
      {
        'name': 'Greatwhite',
        'image': 'assets/images/greatwhite.jpeg',
        'pdf': 'assets/pdfs/R4.pdf',
        'video': 'assets/videos/song.mp4',
      },
    ],
    // Add more categories
  };

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final companyCategories = categories[companyName] ?? [];

    return Scaffold(
      appBar: AppBar(
        title: Text(
          "$companyName Categories",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.w600),
        ),
        centerTitle: true,
        flexibleSpace: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFF004e92), Color(0xFF000428)],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
        iconTheme: const IconThemeData(color: Colors.white),
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF004e92), Color(0xFF000428)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: companyCategories.isNotEmpty
            ? GridView.builder(
          padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 10),
          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            crossAxisSpacing: 20,
            mainAxisSpacing: 20,
            childAspectRatio: 0.7,
          ),
          itemCount: companyCategories.length,
          itemBuilder: (context, index) {
            final category = companyCategories[index];
            return GestureDetector(
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => CategoryDetailScreen(category: category),
                  ),
                );
              },
              child: Card(
                elevation: 10,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(16),
                ),
                color: Colors.white,
                shadowColor: Colors.black.withOpacity(0.3),
                child: Column(
                  children: [
                    ClipRRect(
                      borderRadius: const BorderRadius.vertical(
                        top: Radius.circular(16),
                      ),
                      child: Image.asset(
                        category['image'] ?? 'assets/images/placeholder.png', // Default image
                        height: size.height * 0.2,
                        width: double.infinity,
                        fit: BoxFit.cover,
                        errorBuilder: (context, error, stackTrace) {
                          return Icon(
                            Icons.error_outline,
                            color: Colors.red,
                            size: 50,
                          );
                        },
                      ),
                    ),
                    const SizedBox(height: 10),
                    Text(
                      category['name'] ?? 'Unknown', // Default name if null
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.black87,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      'Explore ${category['name'] ?? 'Category'}',
                      style: TextStyle(
                        fontSize: 14,
                        color: Colors.grey[200],
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 12),
                  ],
                ),
              ),
            );
          },
        )
            : Center(
          child: Text(
            "No categories available for $companyName",
            style: TextStyle(
              fontSize: 16,
              color: Colors.white70,
              fontWeight: FontWeight.w500,
            ),
          ),
        ),
      ),
    );
  }
}
//detais
import 'package:flutter/material.dart';
import 'pdf_view_screen.dart';
import 'video_player.dart';

class CategoryDetailScreen extends StatelessWidget {
  final Map<String, String> category;

  const CategoryDetailScreen({super.key, required this.category});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          category['name']!,
          style: const TextStyle(fontWeight: FontWeight.bold),
        ),
        backgroundColor: const Color(0xFF1565C0),
        centerTitle: true,
        elevation: 5,
        shadowColor: Colors.blue.shade200,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Category Image with Gradient Overlay
            Stack(
              children: [
                ClipRRect(
                  borderRadius: BorderRadius.circular(12),
                  child: Image.asset(
                    category['image']!,
                    height: 250,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
                Container(
                  height: 250,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(12),
                    gradient: LinearGradient(
                      colors: [
                        Colors.black.withOpacity(0.4),
                        Colors.transparent,
                      ],
                      begin: Alignment.bottomCenter,
                      end: Alignment.topCenter,
                    ),
                  ),
                ),
                Positioned(
                  bottom: 16,
                  left: 16,
                  child: Text(
                    category['name']!,
                    style: const TextStyle(
                      fontSize: 22,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                      shadows: [
                        Shadow(
                          blurRadius: 10,
                          color: Colors.black,
                          offset: Offset(0, 2),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
            const SizedBox(height: 20),

            // Video Button with Custom Card Style
            _buildButtonRow(
              context,
              title: "Watch Video",
              icon: Icons.play_circle_fill,
              buttonColor: const Color(0xFF1565C0),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => VideoPlayerScreen(
                      videoPath: category['video']!,
                    ),
                  ),
                );
              },
              downloadTooltip: "Download Video",
              downloadIconColor: const Color(0xFF1565C0),
            ),
            const SizedBox(height: 20),

            // PDF Button with Custom Card Style
            _buildButtonRow(
              context,
              title: "View PDF",
              icon: Icons.picture_as_pdf,
              buttonColor: Colors.orange,
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => PdfViewScreen(
                      pdfPath: category['pdf']!,
                    ),
                  ),
                );
              },
              downloadTooltip: "Download PDF",
              downloadIconColor: Colors.orange,
            ),
            const SizedBox(height: 30),

            // Additional Information Section
            _buildInfoSection(
              title: "About this category",
              content:
              "Explore detailed resources, videos, and PDFs about ${category['name']} in this section. Enhance your knowledge with easy-to-access tools.",
            ),
          ],
        ),
      ),
    );
  }

  // Method to build a row with a button and a download icon
  Widget _buildButtonRow(
      BuildContext context, {
        required String title,
        required IconData icon,
        required Color buttonColor,
        required VoidCallback onPressed,
        required String downloadTooltip,
        required Color downloadIconColor,
      }) {
    return Card(
      elevation: 5,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: Padding(
        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 16.0),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            ElevatedButton.icon(
              onPressed: onPressed,
              icon: Icon(icon, size: 24),
              label: Text(title),
              style: ElevatedButton.styleFrom(
                backgroundColor: buttonColor,
                padding: const EdgeInsets.symmetric(
                    vertical: 14.0, horizontal: 20.0),
                textStyle: const TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
              ),
            ),
            IconButton(
              onPressed: () {
                // Add functionality for downloading
              },
              icon: Icon(Icons.download, color: downloadIconColor),
              tooltip: downloadTooltip,
            ),
          ],
        ),
      ),
    );
  }

  // Method to build an info section
  Widget _buildInfoSection({
    required String title,
    required String content,
  }) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: const TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: Colors.black87,
          ),
        ),
        const SizedBox(height: 10),
        Text(
          content,
          style: const TextStyle(
            fontSize: 14,
            color: Colors.black54,
            height: 1.5,
          ),
        ),
      ],
    );
  }
}





}
//
